// <auto-generated />
using System;
using IOT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IOT.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250106101931_SnakeCaseNamingConvention")]
    partial class SnakeCaseNamingConvention
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IOT.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("card");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_employees");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("IOT.Models.EmployeeEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("EntranceTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("entrance_time");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("exit_time");

                    b.Property<int>("ZoneId")
                        .HasColumnType("integer")
                        .HasColumnName("zone_id");

                    b.HasKey("Id")
                        .HasName("pk_employee_entrance");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("ix_employee_entrance_employee_id");

                    b.HasIndex("ZoneId")
                        .HasDatabaseName("ix_employee_entrance_zone_id");

                    b.ToTable("employee_entrance", (string)null);
                });

            modelBuilder.Entity("IOT.Models.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("info");

                    b.Property<float>("Radiation")
                        .HasColumnType("real")
                        .HasColumnName("radiation");

                    b.HasKey("Id")
                        .HasName("pk_zones");

                    b.ToTable("zones", (string)null);
                });

            modelBuilder.Entity("IOT.Models.EmployeeEntrance", b =>
                {
                    b.HasOne("IOT.Models.Employee", "Employee")
                        .WithMany("Entrances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_entrance_employees_employee_id");

                    b.HasOne("IOT.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_entrance_zones_zone_id");

                    b.Navigation("Employee");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("IOT.Models.Employee", b =>
                {
                    b.Navigation("Entrances");
                });
#pragma warning restore 612, 618
        }
    }
}
